{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xifi3\\\\Desktop\\\\FinanceProject\\\\frontend\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { getKeyMetrics } from \"../../api\";\nimport RatioList from \"../RatioList/RatioList\";\nimport Spinner from \"../Spinners/Spinner\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Market Cap\",\n  render: company => company.marketCapTTM,\n  subTitle: \"Total value of all a company's shares of stock\"\n}, {\n  label: \"Current Ratio\",\n  render: company => company.currentRatioTTM,\n  subTitle: \"Measures the companies ability to pay short term debt obligations\"\n}, {\n  label: \"Return On Equity\",\n  render: company => company.roeTTM,\n  subTitle: \"Return on equity is the measure of a company's net income divided by its shareholder's equity\"\n}, {\n  label: \"Return On Assets\",\n  render: company => company.returnOnTangibleAssetsTTM,\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Free Cashflow Per Share\",\n  render: company => company.freeCashFlowPerShareTTM,\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Book Value Per Share TTM\",\n  render: company => company.bookValuePerShareTTM,\n  subTitle: \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\"\n}, {\n  label: \"Divdend Yield TTM\",\n  render: company => company.dividendYieldTTM,\n  subTitle: \"Shows how much a company pays each year relative to stock price\"\n}, {\n  label: \"Capex Per Share TTM\",\n  render: company => company.capexPerShareTTM,\n  subTitle: \"Capex is used by a company to aquire, upgrade, and maintain physical assets\"\n}, {\n  label: \"Graham Number\",\n  render: company => company.grahamNumberTTM,\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}, {\n  label: \"PE Ratio\",\n  render: company => company.peRatioTTM,\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}];\nconst CompanyProfile = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [companyData, setCompanyData] = useState();\n  useEffect(() => {\n    const getCompanyKeyRatios = async () => {\n      const value = await getKeyMetrics(ticker);\n      setCompanyData(value === null || value === void 0 ? void 0 : value.data[0]);\n    };\n    getCompanyKeyRatios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companyData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RatioList, {\n        config: tableConfig,\n        data: companyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CompanyProfile, \"oIWvfb9RHbVWP9I9E1ZAfgq5EdY=\", false, function () {\n  return [useOutletContext];\n});\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getKeyMetrics","RatioList","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","tableConfig","label","render","company","marketCapTTM","subTitle","currentRatioTTM","roeTTM","returnOnTangibleAssetsTTM","freeCashFlowPerShareTTM","bookValuePerShareTTM","dividendYieldTTM","capexPerShareTTM","grahamNumberTTM","peRatioTTM","CompanyProfile","props","_s","ticker","companyData","setCompanyData","getCompanyKeyRatios","value","data","children","config","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xifi3/Desktop/FinanceProject/frontend/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { CompanyKeyMetrics } from \"../../company\";\r\nimport { getKeyMetrics } from \"../../api\";\r\nimport RatioList from \"../RatioList/RatioList\";\r\nimport Spinner from \"../Spinners/Spinner\";\r\n\r\ntype Props = {};\r\n\r\nconst tableConfig = [\r\n  {\r\n    label: \"Market Cap\",\r\n    render: (company: CompanyKeyMetrics) => company.marketCapTTM,\r\n    subTitle: \"Total value of all a company's shares of stock\",\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) => company.currentRatioTTM,\r\n    subTitle:\r\n      \"Measures the companies ability to pay short term debt obligations\",\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => company.roeTTM,\r\n    subTitle:\r\n      \"Return on equity is the measure of a company's net income divided by its shareholder's equity\",\r\n  },\r\n  {\r\n    label: \"Return On Assets\",\r\n    render: (company: CompanyKeyMetrics) => company.returnOnTangibleAssetsTTM,\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Free Cashflow Per Share\",\r\n    render: (company: CompanyKeyMetrics) => company.freeCashFlowPerShareTTM,\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Book Value Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) => company.bookValuePerShareTTM,\r\n    subTitle:\r\n      \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\",\r\n  },\r\n  {\r\n    label: \"Divdend Yield TTM\",\r\n    render: (company: CompanyKeyMetrics) => company.dividendYieldTTM,\r\n    subTitle: \"Shows how much a company pays each year relative to stock price\",\r\n  },\r\n  {\r\n    label: \"Capex Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) => company.capexPerShareTTM,\r\n    subTitle:\r\n      \"Capex is used by a company to aquire, upgrade, and maintain physical assets\",\r\n  },\r\n  {\r\n    label: \"Graham Number\",\r\n    render: (company: CompanyKeyMetrics) => company.grahamNumberTTM,\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n  {\r\n    label: \"PE Ratio\",\r\n    render: (company: CompanyKeyMetrics) => company.peRatioTTM,\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n];\r\n\r\nconst CompanyProfile = (props: Props) => {\r\n  const ticker = useOutletContext<string>();\r\n  const [companyData, setCompanyData] = useState<CompanyKeyMetrics>();\r\n  useEffect(() => {\r\n    const getCompanyKeyRatios = async () => {\r\n      const value = await getKeyMetrics(ticker);\r\n      setCompanyData(value?.data[0]);\r\n    };\r\n    getCompanyKeyRatios();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {companyData ? (\r\n        <>\r\n          <RatioList config={tableConfig} data={companyData} />\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}