{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xifi3\\\\Desktop\\\\FinanceProject\\\\frontend\\\\src\\\\Components\\\\CashflowStatement\\\\CashFlowStatement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router\";\nimport { getCashFlowStatement } from \"../../api\";\nimport Table from \"../Table/Table\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Operating Cashflow\",\n  render: company => company.operatingCashFlow\n}, {\n  label: \"Investing Cashflow\",\n  render: company => company.netCashUsedForInvestingActivites\n}, {\n  label: \"Financing Cashflow\",\n  render: company => company.netCashUsedProvidedByFinancingActivities\n}, {\n  label: \"Cash At End of Period\",\n  render: company => company.cashAtEndOfPeriod\n}, {\n  label: \"CapEX\",\n  render: company => company.capitalExpenditure\n}, {\n  label: \"Issuance Of Stock\",\n  render: company => company.commonStockIssued\n}, {\n  label: \"Free Cash Flow\",\n  render: company => company.freeCashFlow\n}];\nconst CashflowStatement = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [cashflowData, setCashflow] = useState();\n  useEffect(() => {\n    const fetchCashFlow = async () => {\n      const result = await getCashFlowStatement(ticker);\n      setCashflow(result.data);\n    };\n    fetchCashFlow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cashflowData ? /*#__PURE__*/_jsxDEV(Table, {\n      config: config,\n      data: cashflowData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No Results!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CashflowStatement, \"djcgH5Yx0czuPhkOQ2c77Lp5iy8=\", false, function () {\n  return [useOutletContext];\n});\n_c = CashflowStatement;\nexport default CashflowStatement;\nvar _c;\n$RefreshReg$(_c, \"CashflowStatement\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getCashFlowStatement","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","config","label","render","company","date","operatingCashFlow","netCashUsedForInvestingActivites","netCashUsedProvidedByFinancingActivities","cashAtEndOfPeriod","capitalExpenditure","commonStockIssued","freeCashFlow","CashflowStatement","props","_s","ticker","cashflowData","setCashflow","fetchCashFlow","result","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xifi3/Desktop/FinanceProject/frontend/src/Components/CashflowStatement/CashFlowStatement.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CompanyCashFlow } from \"../../company\";\r\nimport { useOutletContext } from \"react-router\";\r\nimport { getCashFlowStatement } from \"../../api\";\r\nimport Table from \"../Table/Table\";\r\n\r\ntype Props = {};\r\n\r\nconst config = [\r\n  {\r\n    label: \"Date\",\r\n    render: (company: CompanyCashFlow) => company.date,\r\n  },\r\n  {\r\n    label: \"Operating Cashflow\",\r\n    render: (company: CompanyCashFlow) => company.operatingCashFlow,\r\n  },\r\n  {\r\n    label: \"Investing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      company.netCashUsedForInvestingActivites,\r\n  },\r\n  {\r\n    label: \"Financing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      company.netCashUsedProvidedByFinancingActivities,\r\n  },\r\n  {\r\n    label: \"Cash At End of Period\",\r\n    render: (company: CompanyCashFlow) => company.cashAtEndOfPeriod,\r\n  },\r\n  {\r\n    label: \"CapEX\",\r\n    render: (company: CompanyCashFlow) => company.capitalExpenditure,\r\n  },\r\n  {\r\n    label: \"Issuance Of Stock\",\r\n    render: (company: CompanyCashFlow) => company.commonStockIssued,\r\n  },\r\n  {\r\n    label: \"Free Cash Flow\",\r\n    render: (company: CompanyCashFlow) => company.freeCashFlow,\r\n  },\r\n];\r\n\r\nconst CashflowStatement = (props: Props) => {\r\n  const ticker = useOutletContext<string>();\r\n  const [cashflowData, setCashflow] = useState<CompanyCashFlow[]>();\r\n  useEffect(() => {\r\n    const fetchCashFlow = async () => {\r\n      const result = await getCashFlowStatement(ticker!);\r\n      setCashflow(result!.data);\r\n    };\r\n    fetchCashFlow();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {cashflowData ? (\r\n        <Table config={config} data={cashflowData} />\r\n      ) : (\r\n        <h1>No Results!</h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CashflowStatement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,oBAAoB,QAAQ,WAAW;AAChD,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAInC,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACC;AAChD,CAAC,EACD;EACEH,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACE;AAChD,CAAC,EACD;EACEJ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACG;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACI;AACZ,CAAC,EACD;EACEN,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACK;AAChD,CAAC,EACD;EACEP,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACM;AAChD,CAAC,EACD;EACER,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACO;AAChD,CAAC,EACD;EACET,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACQ;AAChD,CAAC,CACF;AAED,MAAMC,iBAAiB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAC1C,MAAMC,MAAM,GAAGtB,gBAAgB,CAAS,CAAC;EACzC,MAAM,CAACuB,YAAY,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAoB,CAAC;EACjED,SAAS,CAAC,MAAM;IACd,MAAM2B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAG,MAAMzB,oBAAoB,CAACqB,MAAO,CAAC;MAClDE,WAAW,CAACE,MAAM,CAAEC,IAAI,CAAC;IAC3B,CAAC;IACDF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACErB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EACGL,YAAY,gBACXnB,OAAA,CAACF,KAAK;MAACK,MAAM,EAAEA,MAAO;MAACoB,IAAI,EAAEJ;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE7C5B,OAAA;MAAAwB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACpB,gBACD,CAAC;AAEP,CAAC;AAACX,EAAA,CAnBIF,iBAAiB;EAAA,QACNnB,gBAAgB;AAAA;AAAAiC,EAAA,GAD3Bd,iBAAiB;AAqBvB,eAAeA,iBAAiB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}