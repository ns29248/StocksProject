{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xifi3\\\\Desktop\\\\FinanceProject\\\\frontend\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport RatioList from \"../RatioList/RatioList\";\nimport { getKeyMetrics } from \"../../api\";\nimport Spinner from \"../Spinner/Spinner\";\nimport { formatLargeNonMonetaryNumber, formatRatio } from \"../../Helpers/NumberFormatting\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Market Cap\",\n  render: company => formatLargeNonMonetaryNumber(company.marketCapTTM),\n  subTitle: \"Total value of all a company's shares of stock\"\n}, {\n  label: \"Current Ratio\",\n  render: company => formatRatio(company.currentRatioTTM),\n  subTitle: \"Measures the companies ability to pay short term debt obligations\"\n}, {\n  label: \"Return On Equity\",\n  render: company => formatRatio(company.roeTTM),\n  subTitle: \"Return on equity is the measure of a company's net income divided by its shareholder's equity\"\n}, {\n  label: \"Return On Assets\",\n  render: company => formatRatio(company.returnOnTangibleAssetsTTM),\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Free Cashflow Per Share\",\n  render: company => formatRatio(company.freeCashFlowPerShareTTM),\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Book Value Per Share TTM\",\n  render: company => formatRatio(company.bookValuePerShareTTM),\n  subTitle: \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\"\n}, {\n  label: \"Divdend Yield TTM\",\n  render: company => formatRatio(company.dividendYieldTTM),\n  subTitle: \"Shows how much a company pays each year relative to stock price\"\n}, {\n  label: \"Capex Per Share TTM\",\n  render: company => formatRatio(company.capexPerShareTTM),\n  subTitle: \"Capex is used by a company to aquire, upgrade, and maintain physical assets\"\n}, {\n  label: \"Graham Number\",\n  render: company => formatRatio(company.grahamNumberTTM),\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}, {\n  label: \"PE Ratio\",\n  render: company => formatRatio(company.peRatioTTM),\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}];\nconst CompanyProfile = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [companyData, setCompanyData] = useState();\n  useEffect(() => {\n    const getCompanyKeyMetrics = async () => {\n      const value = await getKeyMetrics(ticker);\n      setCompanyData(value === null || value === void 0 ? void 0 : value.data[0]);\n    };\n    getCompanyKeyMetrics();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companyData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RatioList, {\n        data: companyData,\n        config: tableConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(CompanyProfile, \"oIWvfb9RHbVWP9I9E1ZAfgq5EdY=\", false, function () {\n  return [useOutletContext];\n});\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","RatioList","getKeyMetrics","Spinner","formatLargeNonMonetaryNumber","formatRatio","jsxDEV","_jsxDEV","Fragment","_Fragment","tableConfig","label","render","company","marketCapTTM","subTitle","currentRatioTTM","roeTTM","returnOnTangibleAssetsTTM","freeCashFlowPerShareTTM","bookValuePerShareTTM","dividendYieldTTM","capexPerShareTTM","grahamNumberTTM","peRatioTTM","CompanyProfile","props","_s","ticker","companyData","setCompanyData","getCompanyKeyMetrics","value","data","children","config","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xifi3/Desktop/FinanceProject/frontend/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CompanyKeyMetrics } from \"../../company\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport RatioList from \"../RatioList/RatioList\";\r\nimport { getKeyMetrics } from \"../../api\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport {\r\n  formatLargeNonMonetaryNumber,\r\n  formatRatio,\r\n} from \"../../Helpers/NumberFormatting\";\r\n\r\ntype Props = {};\r\nconst tableConfig = [\r\n  {\r\n    label: \"Market Cap\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatLargeNonMonetaryNumber(company.marketCapTTM),\r\n    subTitle: \"Total value of all a company's shares of stock\",\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.currentRatioTTM),\r\n    subTitle:\r\n      \"Measures the companies ability to pay short term debt obligations\",\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => formatRatio(company.roeTTM),\r\n    subTitle:\r\n      \"Return on equity is the measure of a company's net income divided by its shareholder's equity\",\r\n  },\r\n  {\r\n    label: \"Return On Assets\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.returnOnTangibleAssetsTTM),\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Free Cashflow Per Share\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.freeCashFlowPerShareTTM),\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Book Value Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.bookValuePerShareTTM),\r\n    subTitle:\r\n      \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\",\r\n  },\r\n  {\r\n    label: \"Divdend Yield TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.dividendYieldTTM),\r\n    subTitle: \"Shows how much a company pays each year relative to stock price\",\r\n  },\r\n  {\r\n    label: \"Capex Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.capexPerShareTTM),\r\n    subTitle:\r\n      \"Capex is used by a company to aquire, upgrade, and maintain physical assets\",\r\n  },\r\n  {\r\n    label: \"Graham Number\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.grahamNumberTTM),\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n  {\r\n    label: \"PE Ratio\",\r\n    render: (company: CompanyKeyMetrics) => formatRatio(company.peRatioTTM),\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n];\r\n\r\nconst CompanyProfile = (props: Props) => {\r\n  const ticker = useOutletContext<string>();\r\n  const [companyData, setCompanyData] = useState<CompanyKeyMetrics>();\r\n  useEffect(() => {\r\n    const getCompanyKeyMetrics = async () => {\r\n      const value = await getKeyMetrics(ticker);\r\n      setCompanyData(value?.data[0]);\r\n    };\r\n    getCompanyKeyMetrics();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {companyData ? (\r\n        <>\r\n          <RatioList data={companyData} config={tableConfig} />\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}