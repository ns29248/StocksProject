{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xifi3\\\\Desktop\\\\FinanceProject\\\\frontend\\\\src\\\\Components\\\\BalanceSheet\\\\BalanceSheet.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useOutletContext } from \"react-router\";\nimport { getBalanceSheet } from \"../../api\";\nimport RatioList from \"../RatioList/RatioList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = [{\n  label: \"Date\",\n  render: company => company.date\n}, {\n  label: \"Operating Cashflow\",\n  render: company => company.operatingCashFlow\n}, {\n  label: \"Investing Cashflow\",\n  render: company => company.netCashUsedForInvestingActivites\n}, {\n  label: \"Financing Cashflow\",\n  render: company => company.netCashUsedProvidedByFinancingActivities\n}, {\n  label: \"Cash At End of Period\",\n  render: company => company.cashAtEndOfPeriod\n}, {\n  label: \"CapEX\",\n  render: company => company.capitalExpenditure\n}, {\n  label: \"Issuance Of Stock\",\n  render: company => company.commonStockIssued\n}, {\n  label: \"Free Cash Flow\",\n  render: company => company.freeCashFlow\n}];\nconst BalanceSheet = props => {\n  _s();\n  const ticker = useOutletContext();\n  const [BalanceSheet, setBalanceSheet] = useState();\n  useEffect(() => {\n    const getData = async () => {\n      const value = await getBalanceSheet(ticker);\n      setBalanceSheet(value === null || value === void 0 ? void 0 : value.data[0]);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: BalanceSheet ? /*#__PURE__*/_jsxDEV(RatioList, {\n      config: config,\n      data: BalanceSheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Company not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(BalanceSheet, \"S/RGgEE+zE45F474jdipG7cphc4=\", false, function () {\n  return [useOutletContext];\n});\n_c = BalanceSheet;\nexport default BalanceSheet;\nvar _c;\n$RefreshReg$(_c, \"BalanceSheet\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getBalanceSheet","RatioList","jsxDEV","_jsxDEV","Fragment","_Fragment","config","label","render","company","date","operatingCashFlow","netCashUsedForInvestingActivites","netCashUsedProvidedByFinancingActivities","cashAtEndOfPeriod","capitalExpenditure","commonStockIssued","freeCashFlow","BalanceSheet","props","_s","ticker","setBalanceSheet","getData","value","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/xifi3/Desktop/FinanceProject/frontend/src/Components/BalanceSheet/BalanceSheet.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CompanyBalanceSheet, CompanyCashFlow } from \"../../company\";\r\nimport { useOutletContext } from \"react-router\";\r\nimport { getBalanceSheet } from \"../../api\";\r\nimport RatioList from \"../RatioList/RatioList\";\r\n\r\ntype Props = {};\r\n\r\nconst config = [\r\n  {\r\n    label: \"Date\",\r\n    render: (company: CompanyCashFlow) => company.date,\r\n  },\r\n  {\r\n    label: \"Operating Cashflow\",\r\n    render: (company: CompanyCashFlow) => company.operatingCashFlow,\r\n  },\r\n  {\r\n    label: \"Investing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      company.netCashUsedForInvestingActivites,\r\n  },\r\n  {\r\n    label: \"Financing Cashflow\",\r\n    render: (company: CompanyCashFlow) =>\r\n      company.netCashUsedProvidedByFinancingActivities,\r\n  },\r\n  {\r\n    label: \"Cash At End of Period\",\r\n    render: (company: CompanyCashFlow) => company.cashAtEndOfPeriod,\r\n  },\r\n  {\r\n    label: \"CapEX\",\r\n    render: (company: CompanyCashFlow) => company.capitalExpenditure,\r\n  },\r\n  {\r\n    label: \"Issuance Of Stock\",\r\n    render: (company: CompanyCashFlow) => company.commonStockIssued,\r\n  },\r\n  {\r\n    label: \"Free Cash Flow\",\r\n    render: (company: CompanyCashFlow) => company.freeCashFlow,\r\n  },\r\n];\r\n\r\nconst BalanceSheet = (props: Props) => {\r\n  const ticker = useOutletContext<string>();\r\n  const [BalanceSheet, setBalanceSheet] = useState<CompanyBalanceSheet>();\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const value = await getBalanceSheet(ticker!);\r\n      setBalanceSheet(value?.data[0]);\r\n    };\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {BalanceSheet ? (\r\n        <RatioList config={config} data={BalanceSheet} />\r\n      ) : (\r\n        <h1> Company not found</h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BalanceSheet;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI/C,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACC;AAChD,CAAC,EACD;EACEH,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACE;AAChD,CAAC,EACD;EACEJ,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACG;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAAwB,IAC/BA,OAAO,CAACI;AACZ,CAAC,EACD;EACEN,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACK;AAChD,CAAC,EACD;EACEP,KAAK,EAAE,OAAO;EACdC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACM;AAChD,CAAC,EACD;EACER,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACO;AAChD,CAAC,EACD;EACET,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAAwB,IAAKA,OAAO,CAACQ;AAChD,CAAC,CACF;AAED,MAAMC,YAAY,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGtB,gBAAgB,CAAS,CAAC;EACzC,MAAM,CAACmB,YAAY,EAAEI,eAAe,CAAC,GAAGxB,QAAQ,CAAsB,CAAC;EACvED,SAAS,CAAC,MAAM;IACd,MAAM0B,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,KAAK,GAAG,MAAMxB,eAAe,CAACqB,MAAO,CAAC;MAC5CC,eAAe,CAACE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IACDF,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,oBACEpB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACGR,YAAY,gBACXf,OAAA,CAACF,SAAS;MAACK,MAAM,EAAEA,MAAO;MAACmB,IAAI,EAAEP;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjD3B,OAAA;MAAAuB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC3B,gBACD,CAAC;AAEP,CAAC;AAACV,EAAA,CAnBIF,YAAY;EAAA,QACDnB,gBAAgB;AAAA;AAAAgC,EAAA,GAD3Bb,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}